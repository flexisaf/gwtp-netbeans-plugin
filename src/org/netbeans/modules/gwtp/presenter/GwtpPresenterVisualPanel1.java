/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.netbeans.modules.gwtp.presenter;

import javax.swing.JPanel;
import org.netbeans.modules.gwtp.util.RevealType;

public final class GwtpPresenterVisualPanel1 extends JPanel {

    /**
     * Creates new form GwtpPresenterVisualPanel1
     */
    public GwtpPresenterVisualPanel1() {
        initComponents();
        
    }

    @Override
    public String getName() {
        return "Step #1";
    }

    //get the selected tab
    public int getSelectedTab() {
        return tabbedPanel.getSelectedIndex();
    }
    
    public RevealType getRevealType() {
        if (rootRadio.isSelected())
            return RevealType.Root;
        else if (rootLayoutRadio.isSelected())
            return RevealType.RootLayout;
        else
            return RevealType.Slot;
    }
    
    public String getSlot() {
        return slotField.getText();
    }
    
    public boolean isSingleton() {
        if (getSelectedTab() == 1) //PresenterWidget
            return singletonCheckbox.isSelected();
        else if (getSelectedTab() == 2) //Popup Presenter
            return popupSingletonCheckbox.isSelected();
        else
            return false;
    }
    
    public boolean isOverrideDefPopPanel() {
        return overrideDefPopPanelCheck.isSelected();
    }
    
     public boolean isaPlace() {
        return isaPlaceCb.isSelected();
    }
    
    public boolean isCrawlable() {
        if (isaPlace())
            return isCrawlableCb.isSelected();
        
        return false;
    }
    
    public String getNameToken() {
        return nameTokenField.getText();
    }
    
    public boolean isCodeSplit() {
        return codeSplitCb.isSelected();
    }
    
    public boolean isAddUiHandlers() {
        return addUiHandlersCb.isSelected();
    }
    
    public boolean isAddOnBind() {
        return addOnBindCb.isSelected();
    }
    
    public boolean isAddOnHide() {
        return addOnHideCb.isSelected();
    }
    
    public boolean isAddOnReset() {
        return addOnResetCb.isSelected();
    }
    
    public boolean isAddOnUnbind() {
        return addOnUnbindCb.isSelected();
    }
    
    public boolean isUseManualReveal() {
        return useManualRevealCb.isSelected();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        tabbedPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rootRadio = new javax.swing.JRadioButton();
        rootLayoutRadio = new javax.swing.JRadioButton();
        slotRadio = new javax.swing.JRadioButton();
        slotField = new javax.swing.JTextField();
        selectSlotButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        isaPlaceCb = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        nameTokenField = new javax.swing.JTextField();
        isCrawlableCb = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        codeSplitCb = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        singletonCheckbox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        popupSingletonCheckbox = new javax.swing.JCheckBox();
        overrideDefPopPanelCheck = new javax.swing.JCheckBox();
        addUiHandlersCb = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        addOnBindCb = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        addOnHideCb = new javax.swing.JCheckBox();
        addOnResetCb = new javax.swing.JCheckBox();
        useManualRevealCb = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        addOnUnbindCb = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jLabel1.text")); // NOI18N

        buttonGroup1.add(rootRadio);
        rootRadio.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(rootRadio, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.rootRadio.text")); // NOI18N
        rootRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(rootLayoutRadio);
        org.openide.awt.Mnemonics.setLocalizedText(rootLayoutRadio, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.rootLayoutRadio.text")); // NOI18N

        buttonGroup1.add(slotRadio);
        org.openide.awt.Mnemonics.setLocalizedText(slotRadio, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.slotRadio.text")); // NOI18N

        slotField.setText(org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.slotField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(selectSlotButton, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.selectSlotButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(isaPlaceCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.isaPlaceCb.text")); // NOI18N
        isaPlaceCb.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                isaPlaceCbStateChanged(evt);
            }
        });
        isaPlaceCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isaPlaceCbActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jLabel3.text")); // NOI18N

        nameTokenField.setText(org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.nameTokenField.text")); // NOI18N
        nameTokenField.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(isCrawlableCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.isCrawlableCb.text")); // NOI18N
        isCrawlableCb.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jLabel4.text")); // NOI18N

        codeSplitCb.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(codeSplitCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.codeSplitCb.text")); // NOI18N
        codeSplitCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeSplitCbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rootRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rootLayoutRadio)
                        .addGap(18, 18, 18)
                        .addComponent(slotRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slotField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectSlotButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(codeSplitCb)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(isaPlaceCb)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTokenField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(isCrawlableCb)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rootRadio)
                    .addComponent(rootLayoutRadio)
                    .addComponent(slotRadio)
                    .addComponent(slotField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectSlotButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(1, 1, 1)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isaPlaceCb)
                    .addComponent(jLabel3)
                    .addComponent(nameTokenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isCrawlableCb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codeSplitCb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPanel.addTab(org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(singletonCheckbox, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.singletonCheckbox.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(singletonCheckbox)
                .addContainerGap(395, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(singletonCheckbox)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        tabbedPanel.addTab(org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(popupSingletonCheckbox, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.popupSingletonCheckbox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(overrideDefPopPanelCheck, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.overrideDefPopPanelCheck.text")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(popupSingletonCheckbox)
                    .addComponent(overrideDefPopPanelCheck))
                .addContainerGap(280, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(popupSingletonCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(overrideDefPopPanelCheck)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        tabbedPanel.addTab(org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(addUiHandlersCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.addUiHandlersCb.text")); // NOI18N
        addUiHandlersCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUiHandlersCbActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jLabel7.text")); // NOI18N

        addOnBindCb.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(addOnBindCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.addOnBindCb.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(addOnHideCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.addOnHideCb.text")); // NOI18N

        addOnResetCb.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(addOnResetCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.addOnResetCb.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useManualRevealCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.useManualRevealCb.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.jLabel8.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(addOnUnbindCb, org.openide.util.NbBundle.getMessage(GwtpPresenterVisualPanel1.class, "GwtpPresenterVisualPanel1.addOnUnbindCb.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(addUiHandlersCb)
                    .addComponent(jLabel7)
                    .addComponent(addOnBindCb)
                    .addComponent(addOnHideCb))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addOnUnbindCb)
                    .addComponent(addOnResetCb)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(useManualRevealCb))
                    .addComponent(jLabel8))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(tabbedPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUiHandlersCb)
                    .addComponent(useManualRevealCb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addOnBindCb)
                    .addComponent(addOnResetCb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addOnHideCb)
                    .addComponent(addOnUnbindCb)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rootRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rootRadioActionPerformed

    private void codeSplitCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeSplitCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeSplitCbActionPerformed

    private void addUiHandlersCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUiHandlersCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addUiHandlersCbActionPerformed

    private void isaPlaceCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isaPlaceCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isaPlaceCbActionPerformed

    private void isaPlaceCbStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_isaPlaceCbStateChanged
        if (isaPlace()) {
            nameTokenField.setEnabled(true);
            isCrawlableCb.setEnabled(true);
        } else {
            nameTokenField.setEnabled(false);
            isCrawlableCb.setEnabled(false);            
        }
    }//GEN-LAST:event_isaPlaceCbStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addOnBindCb;
    private javax.swing.JCheckBox addOnHideCb;
    private javax.swing.JCheckBox addOnResetCb;
    private javax.swing.JCheckBox addOnUnbindCb;
    private javax.swing.JCheckBox addUiHandlersCb;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox codeSplitCb;
    private javax.swing.JCheckBox isCrawlableCb;
    private javax.swing.JCheckBox isaPlaceCb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField nameTokenField;
    private javax.swing.JCheckBox overrideDefPopPanelCheck;
    private javax.swing.JCheckBox popupSingletonCheckbox;
    private javax.swing.JRadioButton rootLayoutRadio;
    private javax.swing.JRadioButton rootRadio;
    private javax.swing.JButton selectSlotButton;
    private javax.swing.JCheckBox singletonCheckbox;
    private javax.swing.JTextField slotField;
    private javax.swing.JRadioButton slotRadio;
    private javax.swing.JTabbedPane tabbedPanel;
    private javax.swing.JCheckBox useManualRevealCb;
    // End of variables declaration//GEN-END:variables
}
